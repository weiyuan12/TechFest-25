services:

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    # The depends_on directive only guarantees the container starts first, not that the service inside is ready.
    depends_on:
      mongodb:
        condition: service_healthy
    container_name: "backend"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root:secret@mongodb:27017/user?authSource=admin # @mongodb instead of localhost
    networks:
      - app-network

  mongodb:
    image: 'mongo:latest'
    container_name: "mongodb"
    environment:
      - MONGO_INITDB_DATABASE=user
      - MONGO_INITDB_ROOT_PASSWORD=secret
      - MONGO_INITDB_ROOT_USERNAME=root
    ports:
      - '27017:27017'
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 200s
      timeout: 10s
      retries: 5
      start_period: 40s
  
  genai:
    build:
      context: ./genai # Path to your genai directory
      dockerfile: Dockerfile # Dockerfile in your genai directory
    ports:
      - "8000:8000"
    container_name: "genai"
    networks:
      - app-network
  frontend:
    build:
      context: ./frontend # Path to your frontend directory
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules 
    environment:
      - WATCHPACK_POLLING=true

networks:
  app-network:
    driver: bridge
